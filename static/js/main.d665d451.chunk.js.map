{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","props","handleClick","e","preventDefault","phoneNumber","state","phoneNumber_countryCode","console","log","recaptcha","auth","RecaptchaVerifier","number","signInWithPhoneNumber","then","code","prompt","confirm","result","user","document","querySelector","textContent","catch","error","this","className","onSubmit","type","pattern","value","onChange","setState","target","id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2PAeAA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAKMP,QAAf,E,OCbqBQ,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAwCRC,YAAc,SAACC,GACbA,EAAEC,iBADiB,IAEXC,EAAgB,EAAKC,MAArBD,YACFE,EAAuB,aAASF,GACtCG,QAAQC,IAAIF,GACZ,IAAIG,EAAY,IAAIlB,EAASmB,KAAKC,kBAAkB,aAChDC,EAASN,EACbf,EACGmB,OACAG,sBAAsBD,EAAQH,GAC9BK,MAAK,SAAUZ,GACd,IAAIa,EAAOC,OAAO,YAAa,IACnB,MAARD,GACJb,EAAEe,QAAQF,GACPD,MAAK,SAAUI,GACdX,QAAQC,IAAIU,EAAOC,KAAM,QACzBC,SAASC,cAAc,SAASC,YAC9BJ,EAAOC,KAAKf,YAAc,qBAE7BmB,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,UA1DpB,EAAKnB,MAAQ,CACXD,YAAa,MAJE,E,0CAkEnB,WAAU,IAAD,OACCA,EAAgBqB,KAAKpB,MAArBD,YACR,OACE,qBAAKsB,UAAU,YAAf,SACE,sBAAKA,UAAU,yDAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,+CAEF,uBAAMC,SAAUF,KAAKxB,YAArB,UACE,uBAEA,uBACE2B,KAAK,MACLC,QAAQ,gBACRC,MAAO1B,EACP2B,SAAU,SAAC7B,GACT,EAAK8B,SAAS,CACZ5B,YAAaF,EAAE+B,OAAOH,WAI5B,uBACA,qBAAKJ,UAAU,iBAAf,SACE,uBAAOE,KAAK,SAASE,MAAM,iBAE7B,qBAAKI,GAAG,0B,GA5FaC,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,SAM1BX,M","file":"static/js/main.d665d451.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/auth\";\n\n\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCPzRnaARKqxbz7v2rWT2UkPVg2Tu1pzO8\",\n  authDomain: \"phone-login-2db6e.firebaseapp.com\",\n  projectId: \"phone-login-2db6e\",\n  storageBucket: \"phone-login-2db6e.appspot.com\",\n  messagingSenderId: \"683632220759\",\n  appId: \"1:683632220759:web:e58cc6ba32dc476c8a2112\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { Component, label } from \"react\";\nimport \"./App.css\";\nimport firebase from \"./firebase\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phoneNumber: null,\n    };\n  }\n\n  //   setUpRecaptcha = () =>{\n  // window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\n  //   \"sign-in-button\",\n  //   {\n  //     size: \"invisible\",\n  //     callback: (response) => {\n  //       // reCAPTCHA solved, allow signInWithPhoneNumber.\n  //       this.onSignInSubmit();\n  //     },\n  //   }\n  // );\n\n  //   };\n\n  //   onSignInSubmit = (event) => {\n  // event.preventDefault();\n  //     const phoneNumber = \"+918369696578\";\n  //     const appVerifier = window.recaptchaVerifier;\n  //     firebase\n  //       .auth()\n  //       .signInWithPhoneNumber(phoneNumber, appVerifier)\n  //       .then((confirmationResult) => {\n  // SMS sent. Prompt user to type the code from the message, then sign the\n  // user in with confirmationResult.confirm(code).\n  // window.confirmationResult = confirmationResult;\n  // ...\n  // })\n  // .catch((error) => {\n  // Error; SMS not sent\n  // ...\n  //     });\n  // }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const { phoneNumber } = this.state;\n    const phoneNumber_countryCode = `+91${phoneNumber}`;\n    console.log(phoneNumber_countryCode);\n    let recaptcha = new firebase.auth.RecaptchaVerifier(\"recaptcha\");\n    let number = phoneNumber_countryCode;\n    firebase\n      .auth()\n      .signInWithPhoneNumber(number, recaptcha)\n      .then(function (e) {\n        let code = prompt(\"enter otp\", \"\");\n        if (code == null) return;\n        e.confirm(code)\n          .then(function (result) {\n            console.log(result.user, \"user\");\n            document.querySelector(\"label\").textContent =\n              result.user.phoneNumber + \"Number Verified\";\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n  };\n\n  render() {\n    const { phoneNumber } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center align-item-center form-text\">\n          <div className=\"col-sm-6 text-left\">\n            <h2>Phone Login</h2>\n          </div>\n          <form onSubmit={this.handleClick}>\n            <br />\n\n            <input\n              type=\"tel\"\n              pattern=\"[789][0-9]{9}\"\n              value={phoneNumber}\n              onChange={(e) => {\n                this.setState({\n                  phoneNumber: e.target.value,\n                });\n              }}\n            />\n            <br />\n            <div className=\"button-content\">\n              <input type=\"submit\" value=\"Click here\" />\n            </div>\n            <div id=\"recaptcha\"></div>\n          </form>\n        </div>\n        \n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';  \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}